#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–∞ World Devices
"""

import sys
import os
sys.path.append('.')

from parsers.world_devices_parser import WorldDevicesParser
import requests
from bs4 import BeautifulSoup

def test_world_devices_parsing():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ World Devices"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ World Devices")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—Å–µ—Ä
    parser = WorldDevicesParser()
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    query = "iPhone 15 PRO 256gb"
    search_url = f"https://world-devices.ru/search/?search={query}&description=true"
    
    print(f"üì° URL: {search_url}")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
    response = parser.get_page(search_url)
    if not response:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É")
        return
    
    print(f"‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª—É—á–µ–Ω–∞, —Ä–∞–∑–º–µ—Ä: {len(response.text)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –ü–∞—Ä—Å–∏–º HTML
    soup = BeautifulSoup(response.text, 'lxml')
    
    # –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Ç–æ–≤–∞—Ä–æ–≤
    product_elements = soup.select('.product-layout')
    print(f"üì¶ –ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤: {len(product_elements)}")
    
    if product_elements:
        print("\nüîç –ê–Ω–∞–ª–∏–∑ –ø–µ—Ä–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞:")
        first_product = product_elements[0]
        
        # –ù–∞–∑–≤–∞–Ω–∏–µ
        title_elem = first_product.select_one('.caption h4 a')
        if title_elem:
            title = title_elem.get_text(strip=True)
            print(f"üìù –ù–∞–∑–≤–∞–Ω–∏–µ: {title}")
        else:
            print("‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            print("üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å –∫–ª–∞—Å—Å–æ–º 'caption':")
            caption_elements = first_product.select('.caption')
            for i, elem in enumerate(caption_elements):
                print(f"  {i+1}. {elem}")
        
        # –¶–µ–Ω–∞
        price_elem = first_product.select_one('.price-new')
        if not price_elem:
            price_elem = first_product.select_one('.price')
        
        if price_elem:
            price_text = price_elem.get_text(strip=True)
            print(f"üí∞ –¶–µ–Ω–∞: {price_text}")
        else:
            print("‚ùå –¶–µ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            print("üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å —Ü–µ–Ω–æ–π:")
            price_elements = first_product.select('[class*="price"]')
            for i, elem in enumerate(price_elements):
                print(f"  {i+1}. {elem}")
        
        # –°—Å—ã–ª–∫–∞
        link_elem = first_product.select_one('.caption h4 a')
        if link_elem:
            link = link_elem.get('href')
            print(f"üîó –°—Å—ã–ª–∫–∞: {link}")
        else:
            print("‚ùå –°—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–µ—Ä
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–∞:")
    results = parser.search_products(query)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–∞—Ä—Å–µ—Ä–∞: {len(results)}")
    
    if results:
        print("‚úÖ –ü–∞—Ä—Å–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        for i, product in enumerate(results[:3]):
            print(f"  {i+1}. {product['title'][:50]}... - {product['price']} —Ä—É–±.")
    else:
        print("‚ùå –ü–∞—Ä—Å–µ—Ä –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç —Ç–æ–≤–∞—Ä—ã")
        
        # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
        print("\nüîç –ü–æ–∏—Å–∫ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤:")
        alternative_selectors = [
            '.product-item',
            '.product-card', 
            '.item',
            '[data-product]',
            '.goods-item'
        ]
        
        for selector in alternative_selectors:
            elements = soup.select(selector)
            if elements:
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω—ã —ç–ª–µ–º–µ–Ω—Ç—ã '{selector}': {len(elements)}")

if __name__ == "__main__":
    test_world_devices_parsing()




