#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –º–∞–≥–∞–∑–∏–Ω–æ–≤
"""
import os
import sys
import time
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ç–æ–∫–µ–Ω—ã –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –æ—à–∏–±–æ–∫
os.environ['TELEGRAM_BOT_TOKEN'] = 'test_token'
os.environ['TELEGRAM_CHAT_ID'] = '123456789'

from parsers.pitergsm_parser import PiterGSMParser
from parsers.world_devices_parser import WorldDevicesParser
from parsers.gsm_store_parser import GSMStoreParser

def test_store(parser, store_name, test_query="iPhone 15"):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–¥–∏–Ω –º–∞–≥–∞–∑–∏–Ω"""
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º {store_name}...")
    print(f"–ó–∞–ø—Ä–æ—Å: {test_query}")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫
        results = parser.search_products(test_query)
        
        if results:
            print(f"‚úÖ {store_name}: –ù–∞–π–¥–µ–Ω–æ {len(results)} —Ç–æ–≤–∞—Ä–æ–≤")
            for i, product in enumerate(results[:3], 1):
                print(f"  {i}. {product['title'][:50]}... - {product['price']} —Ä—É–±.")
        else:
            print(f"‚ùå {store_name}: –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
    except Exception as e:
        print(f"‚ùå {store_name}: –û—à–∏–±–∫–∞ - {e}")

def main():
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –º–∞–≥–∞–∑–∏–Ω–æ–≤")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –º–∞–≥–∞–∑–∏–Ω
    test_store(PiterGSMParser(), "PiterGSM")
    time.sleep(5)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
    
    test_store(WorldDevicesParser(), "World Devices")
    time.sleep(5)
    
    test_store(GSMStoreParser(), "GSM Store")
    
    print("\n" + "=" * 50)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

if __name__ == "__main__":
    main()

