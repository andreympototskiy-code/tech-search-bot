#!/usr/bin/env python3
"""
–¢–µ—Å—Ç—ã –ø–∞—Ä—Å–µ—Ä–æ–≤
"""

import os
import sys
import pytest

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.join(os.path.dirname(__file__), ".."))


def test_parser_imports():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –≤—Å–µ—Ö –ø–∞—Ä—Å–µ—Ä–æ–≤"""
    try:
        from parsers.pitergsm_parser import PiterGSMParser
        from parsers.world_devices_parser import WorldDevicesParser
        from parsers.gsm_store_parser import GSMStoreParser
        from parsers.dns_parser import DNSParser
        from parsers.mvideo_parser import MVideoParser
        from parsers.eldorado_parser import EldoradoParser
        from parsers.citilink_parser import CitilinkParser

        print("‚úÖ –í—Å–µ –ø–∞—Ä—Å–µ—Ä—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
    except ImportError as e:
        pytest.fail(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –ø–∞—Ä—Å–µ—Ä–æ–≤: {e}")


def test_parser_initialization():
    """–¢–µ—Å—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–∞—Ä—Å–µ—Ä–æ–≤"""
    try:
        from parsers.pitergsm_parser import PiterGSMParser
        from parsers.world_devices_parser import WorldDevicesParser

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
        pitergsm = PiterGSMParser()
        world_devices = WorldDevicesParser()

        assert pitergsm.store_name == "PiterGSM"
        assert world_devices.store_name == "World Devices"

        print("‚úÖ –ü–∞—Ä—Å–µ—Ä—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    except Exception as e:
        pytest.fail(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–∞—Ä—Å–µ—Ä–æ–≤: {e}")


def test_base_parser():
    """–¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞"""
    try:
        from parsers.base_parser import BaseParser

        class TestParser(BaseParser):
            def __init__(self):
                super().__init__("Test Store")

            def search_products(self, query):
                return []

            def parse_product(self, product_element):
                return None

        parser = TestParser()
        assert parser.store_name == "Test Store"
        assert hasattr(parser, "session")
        assert hasattr(parser, "get_page")

        print("‚úÖ –ë–∞–∑–æ–≤—ã–π –ø–∞—Ä—Å–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    except Exception as e:
        pytest.fail(f"–û—à–∏–±–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞: {e}")


def test_parser_methods():
    """–¢–µ—Å—Ç –º–µ—Ç–æ–¥–æ–≤ –ø–∞—Ä—Å–µ—Ä–æ–≤"""
    try:
        from parsers.world_devices_parser import WorldDevicesParser

        parser = WorldDevicesParser()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–µ—Ç–æ–¥–æ–≤
        assert hasattr(parser, "search_products")
        assert hasattr(parser, "parse_product")
        assert callable(parser.search_products)
        assert callable(parser.parse_product)

        print("‚úÖ –ú–µ—Ç–æ–¥—ã –ø–∞—Ä—Å–µ—Ä–æ–≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    except Exception as e:
        pytest.fail(f"–û—à–∏–±–∫–∞ –º–µ—Ç–æ–¥–æ–≤ –ø–∞—Ä—Å–µ—Ä–æ–≤: {e}")


if __name__ == "__main__":
    test_parser_imports()
    test_parser_initialization()
    test_base_parser()
    test_parser_methods()
    print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø–∞—Ä—Å–µ—Ä–æ–≤ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
