#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–æ–∏—Å–∫–∞ —Ç–µ—Ö–Ω–∏–∫–∏
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from search_engine import SearchEngine
from telegram_bot import TelegramNotifier


def demo_search():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞"""
    print("üîç –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–æ–∏—Å–∫–∞ —Ç–µ—Ö–Ω–∏–∫–∏")
    print("=" * 50)

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    search_engine = SearchEngine()
    telegram_notifier = TelegramNotifier()

    # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    test_query = "iPhone 15 PRO 256gb"

    print(f"–ü–æ–∏—Å–∫: {test_query}")
    print("-" * 30)

    try:
        # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫
        results = search_engine.search_all_stores(test_query)

        # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        print(f"‚úÖ –ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {results['total_found']}")
        print(f"‚è∞ –í—Ä–µ–º—è –ø–æ–∏—Å–∫–∞: {results['search_time']}")
        print()

        if results["top_results"]:
            print("üèÜ –¢–æ–ø —Å–∞–º—ã—Ö –¥–µ—à–µ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:")
            for i, result in enumerate(results["top_results"], 1):
                print(f"{i}. {result['title']}")
                print(f"   üí∞ –¶–µ–Ω–∞: {result['price']:,} ‚ÇΩ")
                print(f"   üè™ –ú–∞–≥–∞–∑–∏–Ω: {result['store']}")
                print(f"   üîó –°—Å—ã–ª–∫–∞: {result['link']}")
                print()

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º
        print("üìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º:")
        for store_name, store_results in results["store_results"].items():
            print(f"  {store_name}: {len(store_results)} —Ç–æ–≤–∞—Ä–æ–≤")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram
        if telegram_notifier.bot.token and telegram_notifier.chat_id:
            print("\nüì± –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ Telegram...")
            success = telegram_notifier.send_search_results_sync(results)
            if success:
                print("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Telegram")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram")
        else:
            print("\n‚ö†Ô∏è  Telegram –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç–æ–∫–µ–Ω –∏–ª–∏ chat_id)")

        return results

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {e}")
        return None


def demo_history():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–æ–≤"""
    print("\nüìö –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∏—Å–∫–æ–≤:")
    print("-" * 30)

    try:
        search_engine = SearchEngine()
        history = search_engine.get_search_history(5)

        if history:
            for search in history:
                print(f"üîç {search['query']}")
                print(f"   üìÖ {search['created_at']}")
                print(f"   üì¶ {search['results_count']} —Ç–æ–≤–∞—Ä–æ–≤")
                print()
        else:
            print("–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∏—Å–∫–æ–≤ –ø—É—Å—Ç–∞")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏: {e}")


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã –ø–æ–∏—Å–∫–∞ —Ç–µ—Ö–Ω–∏–∫–∏")
    print()

    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞
    results = demo_search()

    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏
    demo_history()

    print("\n‚ú® –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("\n–î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
    print("python main.py web")
    print("\n–î–ª—è —Ä—É—á–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
    print("python main.py search --query '–≤–∞—à –∑–∞–ø—Ä–æ—Å'")


