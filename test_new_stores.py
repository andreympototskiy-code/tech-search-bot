#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from parsers.world_devices_parser import WorldDevicesParser
from parsers.gsm_store_parser import GSMStoreParser
from parsers.pitergsm_parser import PiterGSMParser


def test_parser(parser, parser_name, test_query):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–∞"""
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ {parser_name}")
    print("=" * 50)
    print(f"–ó–∞–ø—Ä–æ—Å: {test_query}")
    print("-" * 30)

    try:
        results = parser.search_products(test_query)

        if results:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(results)}")
            print()

            for i, result in enumerate(results[:3], 1):
                print(f"{i}. {result['title']}")
                print(f"   üí∞ –¶–µ–Ω–∞: {result['price']:,} ‚ÇΩ")
                print(f"   üè™ –ú–∞–≥–∞–∑–∏–Ω: {result['store']}")
                print(f"   üîó –°—Å—ã–ª–∫–∞: {result['link']}")
                print()
        else:
            print("‚ùå –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

    return len(results) if "results" in locals() else 0


def main():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤")
    print("=" * 50)

    # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    test_query = "iPhone 15 PRO 256gb"

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞—Ä—Å–µ—Ä–æ–≤
    parsers = [
        (WorldDevicesParser(), "World Devices"),
        (GSMStoreParser(), "GSM Store"),
        (PiterGSMParser(), "PiterGSM (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π)"),
    ]

    total_results = 0

    for parser, name in parsers:
        results_count = test_parser(parser, name, test_query)
        total_results += results_count

    print("\nüìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"–í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {total_results}")

    if total_results > 0:
        print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ö†Ô∏è  –í–æ–∑–º–æ–∂–Ω–æ, —Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä—Å–µ—Ä–æ–≤ –ø–æ–¥ —Ç–µ–∫—É—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–∞–π—Ç–æ–≤")


if __name__ == "__main__":
    main()
